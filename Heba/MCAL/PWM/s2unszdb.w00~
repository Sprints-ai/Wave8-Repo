/***************************************************/
/* Layer: MCAL                                     */
/* Module: PWM                                     */
/* File: PWM.h                                     */
/* Author: Team A                                  */
/* Description: PWM header file                    */
/***************************************************/
#ifndef PWM_H_
#define PWM_H_

/*********************************/
/*            MACROS             */
/*********************************/


#include "../../Infrastructure/std_types.h"
#include "../../Infrastructure/registers.h"
#include "../../Infrastructure/common_macros.h"


#define PWM_CH0  (0)
#define PWM_CH1A (1)
#define PWM_CH1B (2)
#define PWM_CH2  (3)

#define		PWM_PRESCALER_NO				(0)
#define		PWM_PRESCALER_8					(1)
#define		PWM_PRESCALER_32				(2)
#define		PWM_PRESCALER_64				(3)
#define		PWM_PRESCALER_128				(4)
#define		PWM_PRESCALER_256				(5)
#define		PWM_PRESCALER_1024				(6)

#define FREQ_100_    (100)

typedef struct
{
	uint8_t u8_Channel;
	uint8_t u8_Prescaler;
}gstr_Pwm_Cfg_t;




/*				ERROR CODE					*/


#define MODULE_ERROR_NUMBER        (30)
#define  ERROR_NULL_PTR            (1)
#define  ERROR_UNILTILZED_PWM	   (2)
#define  ERROR_MULTIPLE_INIT       (3)
#define  ERROR_INVALIDE_Prescaler  (4)
#define  ERROR_INVALIDE_PWM_CHANNEL	(5)
#define	 ERROR_INVALIDE_PARAMETAR	(6)
/*********************************/
/*    FUNCTIONS DECLARATION      */
/*********************************/

/*********************************************************************************/
/* Function: Error_State Pwm_Init(Pwm_Cfg_s *Pwm_Cfg);                         */
/* Type: public                                                                  */
/* Input parameters: Pwm_Cfg Structure (channel number, Prescaler)               */
/* Return type : void                                                            */
/*                                                                               */
/* Description: initialize the PWM configuration                                 */
/*********************************************************************************/
extern u8_ERROR_STATUS_t Pwm_Init(gstr_Pwm_Cfg_t*Pwm_Cfg);

/*********************************************************************************/
/* Function: Error_State Pwm_Start(uint8_t channel,uint8_t Duty);                */
/* Type: public                                                                  */
/* Input parameters: Channel ID, Duty cycle(0:100)                               */
/* Return type : Error State                                                     */
/*                                                                               */
/* Description: starts the PWM on the dedicated channel with the required duty   */
/*				cycle and frequency                                              */
/*-------------------------------------------------------                        */
/*(IN timer 0) there are only 5 available Frequencies:                           */
/*-------------------------------------------------------                        */
/*Frequency (NO-Prescaler) --> 31,372HZ                                          */
/*Frequency (Prescaler 8) --> 3,921HZ                                            */
/*Frequency (Prescaler 64) --> 490HZ                                             */
/*Frequency (Prescaler 256) --> 122HZ                                            */
/*Frequency (Prescaler 1024) --> 31HZ                                            */
/*--------------------------------------------------------                       */
/*(IN timer 2) there are only 7 available Frequencies:                           */
/*-------------------------------------------------------                        */
/*Frequency (NO-Prescaler) --> 31,372HZ                                          */
/*Frequency (Prescaler 8) --> 3,921HZ                                            */
/*Frequency (Prescaler 32) --> 980HZ                                             */
/*Frequency (Prescaler 64) --> 490HZ                                             */
/*Frequency (Prescaler 128) --> 245HZ                                            */
/*Frequency (Prescaler 256) --> 122HZ                                            */
/*Frequency (Prescaler 1024) --> 31HZ                                            */
/*-------------------------------------------------------                        */
/*((all this calculations are for phase correct mode))                           */
/*all this calculation for F_CPU 16MHz                                           */
/*********************************************************************************/
extern u8_ERROR_STATUS_t Pwm_Start(uint8_t Channel,uint8_t Duty,uint32_t Frequncy);

/*********************************************************************************/
/* Function: Error_State Pwm_Start(uint8_t channel,uint8_t Duty);                */
/* Type: public                                                                  */
/* Input parameters: Channel ID, Duty cycle(0:100)                               */
/* Return type : Error State                                                     */
/*                                                                               */
/* Description: updates the duty cycle and frequency of the dedicated channel    */
/*********************************************************************************/
extern u8_ERROR_STATUS_t Pwm_Update(uint8_t Channel,uint8_t Duty,uint32_t Frequncy);

/*********************************************************************************/
/* Function: Error_State Pwm_Stop(uint8_t channel);                              */
/* Type: public                                                                  */
/* Input parameters: channel ID                                                  */
/* Return type : Error state                                                     */
/*                                                                               */
/* Description: responsible of Stopping the PWM by clearing the prescaler		 */
/*				of the corresponding channel                                     */
/*********************************************************************************/
extern u8_ERROR_STATUS_t Pwm_Stop(uint8_t Channel);

#endif /* PWM_H_ */